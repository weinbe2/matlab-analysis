-- ESW 09-24-2014
-- This standalone file gauge fixes a configuration to coulomb gauge, 
-- then measure various spectral quantities.

require 'common'
require 'smear'
require 'run'

-- Parameters we need to set.
local nx = :L: -- Lattice spatial dimension
local nt = :T: -- Lattice temporal dimension
local mass = 0.:MASS: -- Light quark mass.
local inlat = "../config/config.:CONFIG:.lime" -- Input configuration
local outlat = "../config_gfix/config.:CONFIG:.gfix.lime" -- Input configuration
local gfix_prec = 1e-8 -- Max residual of gauge fixing.
local gfix_max = 40000 -- Maximum number of gauge fixing steps.
local cg_prec = 1e-6 -- Max residual of CG.
local cg_max = 4000 -- Maximum number of CG steps.
local src_start = 2 -- Where to put the first source.
local src_num = 6 -- How many sources to place. (From this, a uniform spacing is derived)
                  -- math.floor(nt/8) Our convention has been 6 for 24^3x48, 8 for 32^3x64.
local gfix_or = 1.75 -- The overrelaxation parameter for gauge fixing.

printf("inlat = %s\n", inlat)

-- These parameters matter!
local prec = 2 -- Use a multi-precision inverter. Default.

-- Start preparing to load the gauge field, spit out basic info.
local latsize = { nx, nx, nx, nt }
local vol = 1
local spatvol = nx*nx*nx;
local seed = seed or qopqdp.dtime();
printf("latsize =")
for k,v in ipairs(latsize) do vol=vol*v; printf(" %i",v); end
printf("\nvolume = %i\n", vol)
printf("mass = %g\n", mass)
printf("seed = %i\n", seed)
printf("gfix_prec = %g\n", gfix_prec)
printf("cg_prec = %g\n", cg_prec)
printf("src_num = %i\n", src_num)

-- Set up qopqdp.
qopqdp.lattice(latsize);
qopqdp.profile(profile or 0);
qopqdp.verbosity(0);
qopqdp.seed(seed);

-- Start a timer.
totaltime = qopqdp.dtime()

-- Load the gauge field.
g = qopqdp.gauge();
if inlat then g:load(inlat)
else
	printf("No input configuration specified!\n");
	return 400;
end

-- Reunitarize, just to be safe.
do
  local devavg,devmax = g:checkSU()
  printf("unitarity deviation avg: %g  max: %g\n", devavg, devmax)
  g:makeSU()
  devavg,devmax = g:checkSU()
  printf("new unitarity deviation avg: %g  max: %g\n", devavg, devmax)
end

-- Print some basic information about the configuration.
function getplaq(g)
  local ps,pt = g:action{plaq=1}
  local lat = qopqdp.lattice()
  local nd,vol = #lat,1
  for i=1,nd do vol=vol*lat[i] end
  local s = 0.25*nd*(nd-1)*vol
  printf("plaq ss: %-8g  st: %-8g  tot: %-8g\n", ps/s, pt/s, 0.5*(ps+pt)/s)
end
getplaq(g);


-- First, we need to gauge fix!
local t0 = qopqdp.dtime();

-- coulomb(j_decay, error, max iterations, overrelaxation param)
-- note that here 0->x, ..., 3->t
g:coulomb(3, gfix_prec, gfix_max, gfix_or);

t0 = qopqdp.dtime() - t0
printf("Coulgauge meas time: %g\n", t0)

g:save(outlat,"<?xml version=\"1.0\"?>\n<note>generated by qhmc</note>\n", "<?xml version=\"1.0\"?>\n<note>generated by qhmc</note>\n", "D")

totaltime = qopqdp.dtime() - totaltime;

printf("Total time: %f seconds.\n", totaltime);

io.stdout:flush()
